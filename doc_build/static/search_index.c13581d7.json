[{"id":0,"title":"项目简介","content":"#\n\nTIP\n\n运行此项目需要 node 18 以上\n\n\n后台管理系统#\n\n> 项目是边学习边开发，进度会很慢，问题也会很多，循序渐进。\n\numi-admin\n\n技术栈：Umi Max + ProComponents + UnoCSS + Ant Design + TypeScript + React\n\n包管理工具：pnpm","routePath":"/dev/","lang":"","toc":[{"text":"后台管理系统","id":"后台管理系统","depth":3,"charIndex":28}],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"起步","content":"#\n\n\n项目创建#\n\n 1. 使用Umi Max创建项目\n\n 2. 配置UnoCSS并增加预设\n\n\n遇到问题#\n\n 1. Umi Max 使用layout:'mix'后没有头部菜单\n    \n    配置混合菜单时，需要将ProLayout组件的layout属性设置为mix，并设置属性splitMenus: true分离头部和侧边栏菜单\n\n 2. 一直报错的信息为解决\n\nDANGER\n\nWarning: findDOMNode is deprecated and will be removed in the next major\nrelease. Instead, add a ref directly to the element you want to reference. Learn\nmore about using refs safely here:\nhttps://reactjs.org/link/strict-mode-find-node","routePath":"/dev/umi/1","lang":"","toc":[{"text":"项目创建","id":"项目创建","depth":3,"charIndex":3},{"text":"遇到问题","id":"遇到问题","depth":3,"charIndex":49}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"笔记简介","content":"#\n\n本文主要记录的是后端语言一些基础知识学习的相关笔记，包括 NestJS 但不仅仅限于 NestJS\n\n主要学习内容是参考官方文档和网络视频资源\n\n内容比较基础、零碎，记录下来方便后续快速回顾，加深印象\n\n\nNestJS 文档#\n\n官方文档：https://docs.nestjs.com/\n\n中文文档：http://nestjs.inode.club/\n\n\n开发工具#\n\nIntelliJ IDEA 或者 WebStorm\n\n优点：\n\n * 开箱即用、无需配置\n * 代码提示支持好\n\n缺点：\n\n * 付费\n\n\n数据库#\n\nMySQL + Navicat\n\n\nAPI 测试工具#\n\nApifox 中文界面，使用简单，支持快速 Mock，相比 Postman 更容易上手","routePath":"/node/","lang":"","toc":[{"text":"NestJS 文档","id":"nestjs-文档","depth":2,"charIndex":105},{"text":"开发工具","id":"开发工具","depth":2,"charIndex":181},{"text":"数据库","id":"数据库","depth":2,"charIndex":258},{"text":"API 测试工具","id":"api-测试工具","depth":2,"charIndex":282}],"domain":"","frontmatter":{},"version":""},{"id":4,"title":"安装","content":"快速开始#\n\n\n安装#\n\n\n前提#\n\nNode.js（版本 >= 16）\n\n\n安装脚手架#\n\n\n\n\n创建项目#\n\n\n方式一#\n\n使用  Nest CLI  构建的项目会创建一个初始的项目结构,并安装 node modules 和其他一些样板文件，然后创建一个  src/ \n目录，并增加几个核心文件。\n\n\n\n\n方式二#\n\n直接使用  npx  命令安装\n\n\n\n\n启动项目#\n\n\n\n在浏览器中打开  http://localhost:3000/\n\n\n更新脚手架#\n\n更新脚手架确保创建的项目是最新版\n\n","routePath":"/node/nest/0","lang":"","toc":[{"text":"前提","id":"前提","depth":2,"charIndex":13},{"text":"安装脚手架","id":"安装脚手架","depth":2,"charIndex":38},{"text":"创建项目","id":"创建项目","depth":2,"charIndex":49},{"text":"方式一","id":"方式一","depth":3,"charIndex":57},{"text":"方式二","id":"方式二","depth":3,"charIndex":154},{"text":"启动项目","id":"启动项目","depth":2,"charIndex":180},{"text":"更新脚手架","id":"更新脚手架","depth":2,"charIndex":223}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"常用命令","content":"#\n\n\nnest new#\n\n * nest new [options] [name]\n   \n   * nest new -h查看[options]具体选项\n   \n   * [name]为项目名称","routePath":"/node/nest/1","lang":"","toc":[{"text":"nest new","id":"nest-new","depth":3,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"简介","content":"#\n\n本文档为 NextJs 学习手册\n\n内容为一些知识点的记录，方便使用中快速查找定位","routePath":"/node/next/0","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"路由篇之路由组","content":"#\n\nTIP\n\n文档：https://nextjs.org/docs/app/building-your-application/routing/route-groups\n\n\n路由组#\n\n在 app目录下，文件夹名称通常会被映射到 URL 中，但是可以将文件夹标记为路由组，阻止文件夹名称被映射到 URL 中。\n\n把文件夹用括号括住就可以标记为路由组，比如 (dashboard)\n\n使用路由组，你可以将路由和项目文件按照逻辑进行分组，但不会影响 URL 路径结构。路由组可用于比如：\n\n 1. 按站点、意图、团队等将路由分组\n 2. 在同一层级中创建多个布局，甚至是创建多个根布局","routePath":"/node/next/1","lang":"","toc":[{"text":"路由组","id":"路由组","depth":2,"charIndex":87}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"路由篇之动态路由","content":"#\n\nTIP\n\n文档：https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes\n\n\n使用场景#\n\n有的时候，并不能提前知道路由的地址，就比如根据 URL 中的 id 参数展示该 id\n对应的文章内容，文章那么多，我们不可能一一定义路由，这个时候就需要用到动态路由。\n\n\n动态路由#\n\n\n[FolderName]#\n\n使用动态路由，需要将文件夹的名字用方括号括住，比如 [id]、[slug]\n\n这个路由的名字会作为 param prop 传给布局（layout）、 页面（page）、 路由处理程序（route）以及\ngenerateMetadata（用于生成页面元数据） 函数\n\n\n\nExample\n\n路由                        URL 实例    PARAMS 参数\napp/blog/[slug]/page.js   /blog/a   { slug: 'a' }\napp/blog/[slug]/page.js   /blog/b   { slug: 'b' }\napp/blog/[slug]/page.js   /blog/c   { slug: 'c' }\n\n\n[...FolderName]#\n\n如果在方括号内添加省略号，比如 [...folderName]，这表示捕获所有后面所有的路由片段。\n\napp/blog/[...slug]/page.js会匹配 /blog/clothes，也会匹配\n/blog/clothes/tops、/blog/clothes/tops/t-shirts等\n\n注意： 不会匹配不带参数的地址，如app/blog\n\nExample\n\n路由                        URL 实例        PARAMS 参数\napp/blog/[slug]/page.js   /blog/a       { slug: ['a'] }\napp/blog/[slug]/page.js   /blog/a/b     { slug: ['a', 'b'] }\napp/blog/[slug]/page.js   /blog/a/b/c   { slug: ['a', 'b', 'c'] }\n\n\n[[...FolderName]]#\n\n如果在双方括号内添加省略号，比如 [[...folderName]]，这表示可选的捕获所有后面所有的路由片段。\n\n路由匹配方式与[...FloderName]相同\n\n与上一种的区别就在于，不带参数的路由也会被匹配，比如 app/blog\n\nExample\n\n路由                        URL 实例   PARAMS 参数\napp/blog/[slug]/page.js   /blog    { slug: [] }","routePath":"/node/next/2","lang":"","toc":[{"text":"使用场景","id":"使用场景","depth":2,"charIndex":89},{"text":"动态路由","id":"动态路由","depth":2,"charIndex":182},{"text":"[FolderName]","id":"foldername","depth":3,"charIndex":190},{"text":"[...FolderName]","id":"foldername","depth":3,"charIndex":547},{"text":"[[...FolderName]]","id":"foldername","depth":3,"charIndex":985}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"路由篇之平行路由","content":"#\n\nTIP\n\n文档：https://nextjs.org/docs/app/building-your-application/routing/parallel-routes\n\n\n平行路由#","routePath":"/node/next/3","lang":"","toc":[{"text":"平行路由","id":"平行路由","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"路由篇之拦截路由","content":"#\n\nTIP\n\n文档：https://nextjs.org/docs/app/building-your-application/routing/intercepting-ro\nutes\n\n\n拦截路由#","routePath":"/node/next/4","lang":"","toc":[{"text":"拦截路由","id":"拦截路由","depth":2,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"Window PowerShell 检查更新","content":"#\n\nTIP\n\nPowerShell 发布页：https://github.com/PowerShell/PowerShell/releases/tag/v7.4.2\n\n\n查看当前版本#\n\n使用 PowerShell 终端输入指令, 终端将显示您当前的 PowerShell 版本号。\n\n\n\n\n搜索最新版本#\n\nwinget 是 Windows 自带的包管理器\n\n\n\n这个会显示最新版本的正常办和预览版\n\n\n\n\n安装新版本#\n\n\n\n\n验证更新#\n\n直接打开 powershell 并且输入$PSVersionTable.PSVersion\n\n> 可能看到版本号并没有改变 原因：5.1 和 7 版本可以共存","routePath":"/os/0","lang":"","toc":[{"text":"查看当前版本","id":"查看当前版本","depth":3,"charIndex":85},{"text":"搜索最新版本","id":"搜索最新版本","depth":3,"charIndex":146},{"text":"安装新版本","id":"安装新版本","depth":3,"charIndex":205},{"text":"验证更新","id":"验证更新","depth":3,"charIndex":216}],"domain":"","frontmatter":{},"version":""},{"id":12,"title":"Windows11 修改右键菜单","content":"#\n\n\n方法一#\n\n先按住shift键再右键点击桌面\n\n\n方法二#\n\n通过 CMD 命令切换，使用管理员身份运行 CMD\n\n\n\n重启电脑就可以看到效果\n\n或者\n\n直接在 CMD 里输入重启菜单命令\n\n\n\nWARNING\n\n在使用第二种方法时，执行完第一条命令后可能会出现黑屏状态无法操作，重启电脑后重新运行命令就成功修改了右键菜单的状态\n\n","routePath":"/os/1","lang":"","toc":[{"text":"方法一","id":"方法一","depth":3,"charIndex":3},{"text":"方法二","id":"方法二","depth":3,"charIndex":28}],"domain":"","frontmatter":{},"version":""},{"id":13,"title":"VSCode 编辑器设置","content":"#\n\n\n插件#\n\nTIP\n\n前端开发的一些常用插件，提高工作效率。\n\n\n基础#\n\n * Chinese (Simplified) (简体中文)\n\n\nGit 增强#\n\n * Git Graph：查看仓库的 Git Graph，并从图中轻松执行 Git 操作。\n * GitLens — Git supercharged：查看代码最近修改记录、修改人员\n * git-commit-plugin：自动生成git commit消息\n\n\n快速增效#\n\n * Turbo Console Log：快速console.log()\n\n * Code Spell Checker：单词拼写检查\n\n * Color Highlight：高亮代码中颜色\n\n * Image preview：预览代码中图片\n\n * Path Intellisense：代码路径提示\n\n * SVG：预览 SVG\n\n * IntelliJ IDEA Keybindings：IDEA 风格快捷键\n\n * Code Translate：鼠标悬浮显示翻译\n\n * Bookmarks：在代码中进行标记，通过标记快速跳转\n\n * GitHub Repositories：通过仓库地址浏览代码\n\n\n风格统一#\n\n * EditorConfig for VS Code：编辑器风格统一插件\n   \n   * 需在项目根目录配置.editorconfig\n\n * ESLint：代码风格检查工具\n   \n   * standard 规则\n\n * Prettier - Code formatter：代码格式化工具，可根据项目配置文件进行格式化风格统一\n   \n   * 文档\n   * 支持的文件类型\n   * 优先依据项目配置文件进行格式化\n\n\n主题#\n\n * GitHub Theme：Github 风格主题；有暗色和亮色\n * vscode-icons：vscode 文件图标\n * Error Lens：提供行内报错提示\n\n\n其他#\n\n * Draw.io Integration：画图插件\n * Partial Diff：代码对比\n * Live Server：快速开启服务器\n * i18n Ally：国际化翻译插件，可提高行内翻译提示\n   * 文档\n * UnoCSS\n   * 文档\n   * 快速查阅属性\n\n\nVue#\n\n * Vue - Official\n\n * Vue 3 Snippets\n\n * Vue VSCode Snippets\n\n\nAI 增强代码提示#\n\n * CodeGeeX：目前在用，免费功能够用\n\n * GitHub Copilot：Github 出品\n\n * Tabnine：代码提示过短（没有深度使用）\n\n * TONGYI Lingma：阿里出品\n\n\n编辑器设置#\n\n\n在 VSCode 中开启嵌入式（内联）提示#\n\n在 vscode 设置中搜索inlayHint，开启对应需要提示的选项，即可开启内联提示\n\n> 灰色部分为内联提示效果\n\n","routePath":"/os/2","lang":"","toc":[{"text":"插件","id":"插件","depth":2,"charIndex":3},{"text":"基础","id":"基础","depth":3,"charIndex":35},{"text":"Git 增强","id":"git-增强","depth":3,"charIndex":73},{"text":"快速增效","id":"快速增效","depth":3,"charIndex":214},{"text":"风格统一","id":"风格统一","depth":3,"charIndex":524},{"text":"主题","id":"主题","depth":3,"charIndex":747},{"text":"其他","id":"其他","depth":3,"charIndex":840},{"text":"Vue","id":"vue","depth":3,"charIndex":988},{"text":"AI 增强代码提示","id":"ai-增强代码提示","depth":3,"charIndex":1057},{"text":"编辑器设置","id":"编辑器设置","depth":2,"charIndex":1174},{"text":"在 VSCode 中开启嵌入式（内联）提示","id":"在-vscode-中开启嵌入式内联提示","depth":3,"charIndex":1183}],"domain":"","frontmatter":{},"version":""},{"id":14,"title":"前端开发环境配置","content":"#\n\n\nNodejs#\n\nNodejs 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。\n\nNodejs 的包管理器 npm，是全球最大的开源库生态系统。\n\n\n安装方式#\n\n建议\n\n在工作中每个项目可能使用的是不同的 Nodejs 版本，或者想尝鲜 Nodejs 新出 API\n\n所以建议通过版本管理工具安装 Nodejs\n\n官网安装\n\n * LTS 版本: https://nodejs.org/en\n\n * 历史版本: https://nodejs.org/en/download/\n\n版本管理工具安装\n\n * Volta「 不仅可以控制 Nodejs 的版本，也可以控制 yarn、npm、pnpm 等工具的版本 🌳 」\n\n * pnpm「 本质上是一个包管理器，也可以同时安装多个 Nodejs 版本 🌳 」\n\n * n 「 是一个 npm 包，只支持 macos 上使用 」\n\n * nvm / nvm-windows\n\n\n包管理工具#\n\n * npm「 是全球最大的开源库生态系统，与 Nodejs 捆绑安装 」\n\n * pnpm「 比 npm 速度快，更节省磁盘空间 🌳 」\n\n * yarn「 Facebook 开源的包管理器 」\n\n\n开发工具#\n\n\n编辑器#\n\n * VSCode 「 🌳 」\n\n * WebStorm 「 💰 」\n\n * HbuilderX\n\n * 微信小程序开发工具\n\n\n代码管理#\n\n * Git\n\n * SVN\n\n图形工具\n\n * Sourcetree 「 🌳 」\n\n * GitHub Desktop\n\n * Gitbutler\n\n * TortoiseGit\n\n\n接口调试#\n\n * Apifox 「 中文、支持 Mock 数据 🌳 」\n\n * Postman 「 英文 」\n\n * REST Client 「 VSCode 插件、需要学习入门 」","routePath":"/os/3","lang":"","toc":[{"text":"Nodejs","id":"nodejs","depth":2,"charIndex":3},{"text":"安装方式","id":"安装方式","depth":3,"charIndex":122},{"text":"包管理工具","id":"包管理工具","depth":3,"charIndex":461},{"text":"开发工具","id":"开发工具","depth":2,"charIndex":571},{"text":"编辑器","id":"编辑器","depth":3,"charIndex":579},{"text":"代码管理","id":"代码管理","depth":3,"charIndex":652},{"text":"接口调试","id":"接口调试","depth":3,"charIndex":753}],"domain":"","frontmatter":{},"version":""},{"id":15,"title":"系统工具","content":"#\n\n提示\n\n✔ 表示经常使用的工具\n\n\n截图、录屏#\n\n * Snipaste「 轻量截图工具 ✔ 」\n\n * PixPin「 支持长截图、动图 」\n\n * FastStone Capture「 支持截图、录屏 ✔ 」\n\n * EA 录屏「 录屏工具 」\n\n\n文档笔记#\n\n * Notion「 All in One 笔记 ✔ 」\n\n * Typora「 非常好用的 Markdown 编辑器 ✔ 」\n\n * 飞书云文档「 国内 Notion 平替、免费 ✔ 」\n\n * wolai「 国内 Notion 平替 」\n\n * FlowUs「 国内 Notion 平替 」\n\n\n流程图#\n\n * Draw.io「 流程图、思维导图、免费、有 VSCode 插件 ✔ 」\n\n * ProcessOn「 流程图、思维导图、免费 」\n\n * Pixso「 流程图、思维导图、免费够用 ✔ 」\n\n\n效率提升#\n\n * uTools「 Windows 效率工具平台、快速启动 ✔ 」\n\n * Alfred「 Mac 效率工具平台、快速启动 ✔ 」\n\n * Everything「 本地快速搜索工具 」\n\n\n压缩#\n\n * BandZip「 支持多格式、快、免费版够用 ✔ 」\n\n * 7-Zip\n\n\n文件管理#\n\n * Everything「 本地快速搜索工具 」\n\n\n系统管理#\n\n * DiskGenius「 磁盘管理工具 ✔ 」\n\n * Win11 系统「 微软官方系统 ✔ 」\n\n\n魔法#\n\n * Clash for Windows「 Windows ✔ 」\n\n * ClashX「 Mac os ✔ 」\n\n * Clash 「 备用页 」","routePath":"/tools/0","lang":"","toc":[{"text":"截图、录屏","id":"截图录屏","depth":3,"charIndex":20},{"text":"文档笔记","id":"文档笔记","depth":3,"charIndex":130},{"text":"流程图","id":"流程图","depth":3,"charIndex":287},{"text":"效率提升","id":"效率提升","depth":3,"charIndex":393},{"text":"压缩","id":"压缩","depth":3,"charIndex":496},{"text":"文件管理","id":"文件管理","depth":3,"charIndex":543},{"text":"系统管理","id":"系统管理","depth":3,"charIndex":578},{"text":"魔法","id":"魔法","depth":3,"charIndex":638}],"domain":"","frontmatter":{},"version":""},{"id":16,"title":"开发工具","content":"#\n\n\n图片处理#\n\n * tinypng 「 压缩、可转格式 」\n\n * tinypng 中文版 「 只能压缩、最多 20 张，单张限制 5M 」\n\n\n在线工具#\n\n * He3 「 在线工具箱 」\n\n * 草料二维码 「 在线工具箱 」\n\n * carbon 「 在线代码转图片 」\n\n\n开源图标库#\n\n * iconfont 「 阿里系 」\n\n * iconpark 「 字节系 」\n\n * iconfinder 「 免费 」\n\n\n#","routePath":"/tools/1","lang":"","toc":[{"text":"图片处理","id":"图片处理","depth":3,"charIndex":3},{"text":"在线工具","id":"在线工具","depth":3,"charIndex":76},{"text":"开源图标库","id":"开源图标库","depth":3,"charIndex":145},{"text":"","id":"","depth":3,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":17,"title":"前端插件","content":"#\n\n\n时间处理#\n\n * moment.js\n\n * day.js\n\n\n格式转换#\n\n\n工具函数#\n\n * lodash\n\n * ramda\n\n * date-fns\n\n\n动画#\n\n\n可视化工具#","routePath":"/tools/2","lang":"","toc":[{"text":"时间处理","id":"时间处理","depth":3,"charIndex":3},{"text":"格式转换","id":"格式转换","depth":3,"charIndex":36},{"text":"工具函数","id":"工具函数","depth":3,"charIndex":44},{"text":"动画","id":"动画","depth":3,"charIndex":86},{"text":"可视化工具","id":"可视化工具","depth":3,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":18,"title":"刷题网站","content":"#\n\n\nBigFrontEnd.dev#\n\nBigFrontEnd.dev 是一个前端面试题库，提供多种编程语言的刷题平台。\n\nhttps://bigfrontend.dev/zh/\n\n\n牛客网#\n\n牛客网是一个 IT 题库，致力于为 IT 求职者提供海量名企面试题、在线模拟面试，以及求职攻略、面试经验分享等。\n\nhttps://www.nowcoder.com/\n\n\nLeetCode#\n\nLeetCode 是一个程序员在线刷题的网站，提供多种编程语言的刷题平台。\n\nhttps://leetcode.cn/\n\n\nType Challenges#\n\nType Challenges 是一个 TypeScript 题库，提供多种编程语言的刷题平台。\n\nhttps://tsch.js.org/\n\n\nTypeHero#\n\nTypeHero 是一个 TypeScript 题库，提供多种编程语言的刷题平台。\n\nhttps://typehero.dev/","routePath":"/tools/3","lang":"","toc":[{"text":"BigFrontEnd.dev","id":"bigfrontenddev","depth":3,"charIndex":3},{"text":"牛客网","id":"牛客网","depth":3,"charIndex":93},{"text":"LeetCode","id":"leetcode","depth":3,"charIndex":185},{"text":"Type Challenges","id":"type-challenges","depth":3,"charIndex":258},{"text":"TypeHero","id":"typehero","depth":3,"charIndex":349}],"domain":"","frontmatter":{},"version":""},{"id":19,"title":"浏览器存储方式对比","content":"#\n\n浏览器现在主流的存储方式有：localStorage、sessionStorage、Cookie、indexedDB\n\n\n对比#\n\n存储类型    LOCALSTORAGE   SESSIONSTORAGE   COOKIE            INDEXDB\n存储大小    5MB            5MB              4KB               无上限（几百M-几百G）\n生命周期    永久，除非手动清除      页面关闭时清除          关闭浏览器清除，可设置过期时间   永久，除非手动清除\n存储位置    浏览器            浏览器              浏览器               浏览器\n存储方式    键值对            键值对              键值对               键值对\n存储类型    字符串            字符串              字符串               字符串\n作用域     同源页面共享         参考问题一            同源页面共享数据          限制在域名下\n同步/异步   同步             同步               同步                异步\n\n\n常见问题#\n\n\nsessionStorage 能在多个标签页之间共享数据吗？#\n\nsessionStorage 是会话级别的存储，不能在多个标签页或者多个窗口之间共享数据。\n\n但是，如果通过当前页面 A 点击超链接或者通过window.open打开的页面 B，是属于当前会话的延续，B 页面会复制 A\n页面的sessionStorage，仅仅是复制sessionStorage，无论 A 页面还是 B 页面修改sessionStorage都不会影响另一个页面。","routePath":"/web/basic/0","lang":"","toc":[{"text":"对比","id":"对比","depth":2,"charIndex":63},{"text":"常见问题","id":"常见问题","depth":2,"charIndex":587},{"text":"sessionStorage 能在多个标签页之间共享数据吗？","id":"sessionstorage-能在多个标签页之间共享数据吗","depth":3,"charIndex":595}],"domain":"","frontmatter":{},"version":""},{"id":20,"title":"表达式和运算符","content":"#\n\n\n空值合并运算符（??）#\n\n语法#\n\n\n\n用来判断左侧内容是否为null或undefined。如果为null或undefined则返回左侧内容，否者返回右侧内容。\n\n\n\n与逻辑或运算符（||）的区别#\n\n逻辑或运算符是一个布尔逻辑运算符，会把左侧容转换成布尔值，任何假值（0,'',NaN,null,undefined）都不会被返回。\n\n如果想定义这些假值为初始值的话，应该使用空值合并运算符（??）\n\n\n可选链运算符（?.）#\n\n语法#\n\n\n\n允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。在引用的值为空（null,u\nndefined不报错）或者引用函数不存在的时候返回undefined。\n\n当尝试访问可能不存在的对象属性时，可选链运算符将会使表达式更短、更简明。","routePath":"/web/basic/1","lang":"","toc":[{"text":"**空值合并运算符**（`??`）","id":"空值合并运算符","depth":3,"charIndex":-1},{"text":"语法","id":"语法","depth":4,"charIndex":17},{"text":"与逻辑或运算符（`||`）的区别","id":"与逻辑或运算符的区别","depth":4,"charIndex":-1},{"text":"可选链运算符（`?.`）","id":"可选链运算符","depth":3,"charIndex":-1},{"text":"语法","id":"语法-1","depth":4,"charIndex":219}],"domain":"","frontmatter":{},"version":""},{"id":21,"title":"Git 回退代码的几种方法","content":"#\n\n\n取消当前 commit 内容#\n\n\n\nDANGER\n\n注意：使用此命令，会丢失 commit 的最新代码，谨慎使用。\n\n\n撤销指定提交记录#\n\n这种方式比使用 git reset 命令更加安全，因为它不会改变提交历史，而是创建一个新的提交来撤销之前的修改。\n\n\n\n\n回退指定 commit 并删除提交记录#\n\nDANGER\n\n此操作会删除指定 commit 后面的提交记录，谨慎使用。\n\n步骤：\n\n 1. 回退到指定 commit 提交记录\n 2. 强制推送代码，会删除指定 commit 后面的提交记录\n\n\n\nWARNING\n\ngit checkout 也可以进行代码回退，尚未亲自实践，如有兴趣请自行查找资料","routePath":"/web/basic/2","lang":"","toc":[{"text":"取消当前 commit 内容","id":"取消当前-commit-内容","depth":3,"charIndex":3},{"text":"撤销指定提交记录","id":"撤销指定提交记录","depth":3,"charIndex":64},{"text":"回退指定 commit 并删除提交记录","id":"回退指定-commit-并删除提交记录","depth":3,"charIndex":136}],"domain":"","frontmatter":{},"version":""},{"id":22,"title":"vue3 项目配置自动引用","content":"#\n\n自动导入分为自动导入 api 和自动导入组件，原理都是通过 vite 插件来实现的。\n\n\n自动导入组件#\n\n封装过后的组件可以直接在template中使用，组件自动引入且注册。\n\n安装\n\n\n\n自动导入 ElementPlus(可选)\n\n\n\n在 Vite 中配置#\n\n\n\n\n自动导入 api#\n\n像ref,reactive,useRoute,useRouter等api直接使用，无需手动引入。\n\n安装\n\n\n\n在 Vite 中配置#\n\n","routePath":"/web/basic/3","lang":"","toc":[{"text":"自动导入组件","id":"自动导入组件","depth":3,"charIndex":47},{"text":"在 Vite 中配置","id":"在-vite-中配置","depth":4,"charIndex":122},{"text":"自动导入 api","id":"自动导入-api","depth":3,"charIndex":138},{"text":"在 Vite 中配置","id":"在-vite-中配置-1","depth":4,"charIndex":205}],"domain":"","frontmatter":{},"version":""},{"id":23,"title":"UniApp 编译 APP 中 video 黑屏","content":"#\n\n\n问题描述#\n\n在 UniApp 中使用 video 组件，在编译 APP 后，在u-popup中无法正常显示视频,会出现黑屏。\n\n\n问题排查#\n\n在页面中通过硬编码测试，使用静态视频地址和后端返回的地址都可以正常显示和播放视频，但在u-popup无法正常显示，确定了问题原因\n\n\n解决方案#\n\n> 暂未找到可以在u-popup中正常显示 video 组件的解决方案\n\n而是通过改变交互的方式来解决问题：点击播放视频时，额外弹出一个视频详情进行自动播放","routePath":"/web/bug/0","lang":"","toc":[{"text":"问题描述","id":"问题描述","depth":3,"charIndex":3},{"text":"问题排查","id":"问题排查","depth":3,"charIndex":69},{"text":"解决方案","id":"解决方案","depth":3,"charIndex":143}],"domain":"","frontmatter":{},"version":""},{"id":24,"title":"APP、H5  唤起软键盘问题","content":"APP、H5 唤起软键盘问题#\n\n\n问题#\n\n移动端点击输入框会自动唤起软键盘，此时如果页面有固定元素，会导致键盘盖住固定的元素。\n\n\n解决方案#\n\n方案一：监听输入框聚焦事件，当输入框聚焦时，适当增加页面滚动\n\n","routePath":"/web/bug/1","lang":"","toc":[{"text":"问题","id":"问题","depth":3,"charIndex":17},{"text":"解决方案","id":"解决方案","depth":3,"charIndex":67}],"domain":"","frontmatter":{},"version":""},{"id":25,"title":"一元运算符和二元运算符","content":"#\n\n下面代码输出什么？\n\n\n\n解析#\n\n 1. \"b\" + \"a\" + +\"b\" + \"a\"：这是两个字符串的连接，结果是一个新的字符串 \"ba\"。\n 2. +\"b\"：这是一个一元加号运算符，它尝试将其后的 \"b\" 转换为数字。但是，由于 \"b\" 不是一个有效的数字字面量，它会被转换为 NaN（不是数字）。\n 3. 接下来，我们有 \"ba\" + NaN + \"a\"。在 JavaScript 中，字符串和 NaN 的加法运算会将 NaN 转换为字符串\n    \"NaN\"，然后进行字符串连接。\n 4. 所以，\"ba\" + \"NaN\" + \"a\" 的结果是 \"baNaNa\"。 总结：\"b\" + \"a\" + +\"b\" + \"a\" 的结果是\n    \"baNaNa\"。\n\n答案#\n\n\n\n疑问#\n\n\"b\" + \"a\" + +\"b\" + \"a\" 为什么先执行 +b ?\n\n没有()包住优先级为什么变高了？","routePath":"/web/daily/0","lang":"","toc":[{"text":"解析","id":"解析","depth":4,"charIndex":15},{"text":"答案","id":"答案","depth":4,"charIndex":335},{"text":"疑问","id":"疑问","depth":4,"charIndex":342}],"domain":"","frontmatter":{},"version":""},{"id":26,"title":"Git 回退代码的几种方法","content":"#\n\n\n取消当前 commit 内容#\n\n\n\nDANGER\n\n注意：使用此命令，会丢失 commit 的最新代码，谨慎使用。\n\n\n撤销指定提交记录#\n\n这种方式比使用 git reset 命令更加安全，因为它不会改变提交历史，而是创建一个新的提交来撤销之前的修改。\n\n\n\n\n回退指定 commit 并删除提交记录#\n\nDANGER\n\n此操作会删除指定 commit 后面的提交记录，谨慎使用。\n\n步骤：\n\n 1. 回退到指定 commit 提交记录\n 2. 强制推送代码，会删除指定 commit 后面的提交记录\n\n\n\nWARNING\n\ngit checkout 也可以进行代码回退，尚未亲自实践，如有兴趣请自行查找资料","routePath":"/web/dev/0","lang":"","toc":[{"text":"取消当前 commit 内容","id":"取消当前-commit-内容","depth":3,"charIndex":3},{"text":"撤销指定提交记录","id":"撤销指定提交记录","depth":3,"charIndex":64},{"text":"回退指定 commit 并删除提交记录","id":"回退指定-commit-并删除提交记录","depth":3,"charIndex":136}],"domain":"","frontmatter":{},"version":""},{"id":27,"title":"APP 如何打开应用通知权限","content":"#\n\n注意\n\n本文章使用 uniapp 开发，使用了plus。如果涉及多端，需进行条件编译\n\n\n获取通知权限状态#\n\n\n\n\n跳转通知权限设置#\n\nAndroid 可以直接跳转通知设置页面。ios 需要跳转设置页面后在手动进入通知设置\n\n","routePath":"/web/dev/1","lang":"","toc":[{"text":"获取通知权限状态","id":"获取通知权限状态","depth":2,"charIndex":47},{"text":"跳转通知权限设置","id":"跳转通知权限设置","depth":2,"charIndex":61}],"domain":"","frontmatter":{},"version":""},{"id":28,"title":"APP 增加权限获取说明","content":"#\n\n\n背景#\n\nAPP 上架华为应用商店需要说明获取权限的说明，否则上架失败。\n\n技术栈：UniApp Vue3 Vite\n\n\n资料#\n\n安卓权限标识：https://developer.android.com/reference/android/Manifest.permission\n(需要翻墙)\n\n\n踩坑#\n\n权限标识\n\n调用摄像头的权限：android.permission.CAMERA\n\n调用相册的权限：android.permission.READ_MEDIA_IMAGES\n\n在项目中使用uni.chooseImage()去获取相机、相册权限。获取相机权限正常，获取相册权限一直显示权限是永久关闭状态，手动去启用也无法正常使用。\n\n在网上查找到的资料使用的权限都是android.permission.READ_EXTERNAL_STORAGE\n\nDANGER\n\n但是READ_EXTERNAL_STORAGE在安卓 11(从 API 33 开始，此权限无效) 中已经失效了，需要使用READ_MEDIA_IMAGES、\nREAD_MEDIA_VIDEO、 READ_MEDIA_AUDIO\n\n最后，改成android.permission.READ_MEDIA_IMAGES可以正常获取权限，获取相册的内容。\n\n\n解决方案#\n\n> 插件中使用了plus，如果是多端项目需要进行条件判断\n\n使用插件：App 权限判断和提示\n\n在调用插件获取权限时，通过plus.nativeObj.View画出权限获取说明，在获取权限成功后，移除权限获取说明。\n\n\n\n\n其他方案#\n\nuni-registerRequestPermissionTips：以上面方案为基础进行的二开插件，与获取权限操作同步展示，但是获取摄像头权限不能正常使用，看后\n续会不会修复\n\n权限申请说明：通过对 UniApp API 的拦截,提前展示要获取的权限说明。 不用改动代码","routePath":"/web/dev/2","lang":"","toc":[{"text":"背景","id":"背景","depth":3,"charIndex":3},{"text":"资料","id":"资料","depth":3,"charIndex":64},{"text":"踩坑","id":"踩坑","depth":3,"charIndex":153},{"text":"解决方案","id":"解决方案","depth":3,"charIndex":566},{"text":"其他方案","id":"其他方案","depth":3,"charIndex":685}],"domain":"","frontmatter":{},"version":""},{"id":29,"title":"JSON 导出 xlsx","content":"#\n\nTIP\n\n本案例只是一个 Demo，满足个人场景使用，经测试可以把 JSON 数据导出为 Excel 文件\n\n具体代码逻辑需要根据实际业务进行调整\n\n代码执行环境为 nodejs\n\n\n业务场景#\n\n将代码中配置好的 JSON 数据导出生成 Excel 类型的文件\n\n * 翻译多语言作为源文件提供\n\n\n安装#\n\nGithub 地址\n\n\n源数据#\n\n\n\n\n转换方法#\n\n\n\n\n使用#\n\n运行命令成功后，后生成zh.xlsx文件\n\n","routePath":"/web/dev/3","lang":"","toc":[{"text":"业务场景","id":"业务场景","depth":3,"charIndex":94},{"text":"安装","id":"安装","depth":3,"charIndex":153},{"text":"源数据","id":"源数据","depth":3,"charIndex":170},{"text":"转换方法","id":"转换方法","depth":3,"charIndex":179},{"text":"使用","id":"使用","depth":3,"charIndex":189}],"domain":"","frontmatter":{},"version":""},{"id":30,"title":"笔记简介","content":"#\n\n欢迎来到我的前端世界！\n\n🎉 这里是我在前端学习与实践中精心打磨的记录阵地。无论你是刚开始探索前端的初学者，还是想要不断提升的进阶开发者，都希望你能在这里找到些许灵感与帮助。🙌\n\n在这片小小的数字园地里，我会分享什么？\n\n知识点记录 📚：\n\n从基础的 HTML/CSS/JavaScript，到热门框架（React、Vue\n等）及前沿技术（如微前端、Serverless、WebAssembly），我会持续记录学习过程中的要点与心得。希望这些简明的笔记与总结，能让你在知识的海洋中快速\n找到方向。\n\n踩坑记录 ⚠️：\n\n没有开发者能在前端之路上一帆风顺！在这里，我会详实记录各式各样的“坑点”：从奇怪的浏览器兼容问题，到配置工具链时的诡异报错，再到一行代码引发的蝴蝶效应。通过分析\n问题场景、调试过程与最终方案，让你在今后的实战中少走弯路。\n\n工具库使用方式 🔧：\n\n无论是构建工具（Webpack、Vite）、UI 库（Ant Design、Element\nUI）、还是数据可视化方案（ECharts、D3.js），我都会尽量以图文并茂的方式展示它们的安装、配置、基础用法以及优化技巧。这样你在项目开发中就能更快速地上\n手，从而提升生产力。\n\n刷题与实战场景 📝：\n\n想要在技术面试中脱颖而出，或者在项目中轻松应对复杂逻辑？我也会分享前端知识与算法题的解题思路和代码示例。通过扎实的题目演练与思维扩展，让你的技术更有深度与厚度。\n\n社区与开源分享 🤝：\n\n前端生态日新月异，我也会不定期提及一些有趣的开源项目、社区活动、技术大会以及学习资源。希望在不间断的探索中，为彼此开拓更广阔的眼界与思路。\n\n我的期望 💕：\n\n希望这片前端小天地，能成为你学习路上的指路灯与加油站。愿我们在不断迭代的前端世界里，保持热情，持之以恒，一起前行！💪","routePath":"/web/","lang":"","toc":[],"domain":"","frontmatter":{},"version":""},{"id":31,"title":"常用库记录","content":"#\n\n\n国际化多语言#\n\n\nvue#\n\n * vue-i18n\n\n\nreact#\n\n * react-i18next\n\n * i18next","routePath":"/web/lib/0","lang":"","toc":[{"text":"国际化多语言","id":"国际化多语言","depth":2,"charIndex":3},{"text":"vue","id":"vue","depth":3,"charIndex":13},{"text":"react","id":"react","depth":3,"charIndex":33}],"domain":"","frontmatter":{},"version":""},{"id":32,"title":"Swiper 使用指南","content":"#\n\nTIP\n\n本文章主要介绍 Swiper Element 的基本使用和遇到的坑点，想要了解更多请查看 Swiper 官方文档\n\n项目是使用 Vue3 + Nuxt 进行开发。别问我为什么不用 Swiper Vue 组件开发，问我就是也不知道\n\nSwiper 版本：V 11.1.9\n\n\n安装#\n\n具体安装步骤参考Swiper 官方文档\n\n\n常见问题#\n\n自定义元素报警告#\n\n主要使用compilerOptions - isCustomElement 解决\n\n1. 获取 Swiper 实例#\n\n在 Swiper-Element 中 监听事件 和 调用方法 都需要使用到 swiper 实例\n\n * 使用 ref 获取 swiper-container 元素，定义为 swiperElRef\n\n * 实例为：swiperElRef.value.swiper\n\n2. 监听方法#\n\n在 Vue 中使用，使用 on 监听事件，被监听事件名改为驼峰式\n\n\n\n\n\n3. 自动播放#\n\n在 swiper 实例中设置 autoplay 为 true 即可实现自动播放\n\n即使没设置 autoplay，但设置了 autoplay 其他属性，也会触发自动播放\n\n获取当前自动播放的剩余时间，监听事件 autoplaytimeleft 可以获取剩余时间和剩余百分比\n\n\n\n4.#","routePath":"/web/lib/1","lang":"","toc":[{"text":"安装","id":"安装","depth":3,"charIndex":144},{"text":"常见问题","id":"常见问题","depth":3,"charIndex":171},{"text":"自定义元素报警告","id":"自定义元素报警告","depth":4,"charIndex":178},{"text":"1. 获取 Swiper 实例","id":"1-获取-swiper-实例","depth":4,"charIndex":231},{"text":"2. 监听方法","id":"2-监听方法","depth":4,"charIndex":381},{"text":"3. 自动播放","id":"3-自动播放","depth":4,"charIndex":429},{"text":"4.","id":"4","depth":4,"charIndex":-1}],"domain":"","frontmatter":{},"version":""},{"id":33,"title":"vue-i18n 的基本使用","content":"#\n\n官方文档\n\n安装\n\n\n基本使用#\n\n在 locales 下创建index.js，负责导出国际化配置\n\n\n\n在 main.js 中引入\n\n\n\n在 vue 中使用\n\n\n\n在 js 文件中使用\n\n","routePath":"/web/lib/2","lang":"","toc":[{"text":"基本使用","id":"基本使用","depth":2,"charIndex":13}],"domain":"","frontmatter":{},"version":""},{"id":34,"title":"Label Studio 使用指南","content":"#\n\n\nLabel Studio 简介#\n\nLabel Studio 是一个开源的、基于 Web 的数据标注工具，它支持多种数据类型，如文本、图像、音频和视频等。Label Studio\n提供了一个直观的用户界面，使得标注人员可以轻松地进行数据标注。\n\n有 Python SDK、ML 后端支持、前端界面，在下面实例中只使用了前端标注页面的，在此进行记录。\n\nLabel Studio 的官方文档\n\nLabel Studio V1.13.1 的 Github\n\n\n使用背景#\n\n在公司自研项目中加入开源标注工具。\n\n**注：**官方文档可能和当前版本有所不通，部分功能可能不支持。\n\n\n使用方法#\n\n 1. 克隆 Label Studio 源码\n\n 2. 前端标注工具路径在/web/editor, 命令需要在/web 目录下运行，运行yarn build完成打包\n\n 3. 把dist/libs/editor 引入到项目中/public 下*（导致项目体积过大）*\n\n 4. 在 index.html 中引入\n\n 5. 在页面引入css/public/label-studio/editor/main.css\n\n\n数据回显#\n\n\n\n\n遇到的问题#\n\n官网文档和示例提供的文档表示标注数据为百分比，但根据实际测试，标注数据为像素值，实际取值得到的是像素值#\n\nlabel studio 会在window上挂载一个全局对象，可以通过window.Htx来获取标注数据\n\n","routePath":"/web/lib/3","lang":"","toc":[{"text":"Label Studio 简介","id":"label-studio-简介","depth":2,"charIndex":3},{"text":"使用背景","id":"使用背景","depth":3,"charIndex":231},{"text":"使用方法","id":"使用方法","depth":3,"charIndex":292},{"text":"数据回显","id":"数据回显","depth":3,"charIndex":507},{"text":"遇到的问题","id":"遇到的问题","depth":3,"charIndex":517},{"text":"官网文档和示例提供的文档表示标注数据为百分比，但根据实际测试，标注数据为像素值，实际取值得到的是像素值","id":"官网文档和示例提供的文档表示标注数据为百分比但根据实际测试标注数据为像素值实际取值得到的是像素值","depth":4,"charIndex":525}],"domain":"","frontmatter":{},"version":""},{"id":35,"title":"浏览器控制台 Consloe.log 的高级样式","content":"#\n\n要为浏览器控制台的 console.log 输出样式化，可以使用 CSS 样式或者使用特殊的命令行工具。\n\n\n使用 CSS 样式#\n\n可以通过在 console.log()输出的字符串中添加 CSS 样式来实现样式化效果。下面是一个示例代码：\n\n\n\n在上面的代码中，我们通过%c 占位符来为输出的字符串添加样式。在%c 后面的引号内，可以添加任意的 CSS\n样式。上面的示例中，我们为字符串添加了蓝色的文字颜色、20px 的字体大小和黄色的背景色。\n\n\n使用特殊的命令行工具#\n\n有一些第三方的工具可以帮助我们在控制台中添加更高级的样式化效果，如 chalk.js 和 ansi-colors\n等。这些工具提供了更多的颜色和样式选项，使得控制台输出更加丰富。以下是一个使用 chalk.js 的示例代码：\n\n\n\n在上面的代码中，我们首先使用require()函数将 chalk.js 模块引入。然后，我们可以使用 chalk.blue()方法为输出的字符串添加蓝色样式。\n\n注意：在浏览器环境中使用这些命令行工具需要使用构建工具将代码打包后再在浏览器中运行。\n\n通过上述方法，你可以为浏览器控制台的 console.log 输出添加高级的样式化效果。\n\n\n效果预览#\n\n","routePath":"/web/lib/4","lang":"","toc":[{"text":"使用 CSS 样式","id":"使用-css-样式","depth":3,"charIndex":57},{"text":"使用特殊的命令行工具","id":"使用特殊的命令行工具","depth":3,"charIndex":229},{"text":"效果预览","id":"效果预览","depth":3,"charIndex":530}],"domain":"","frontmatter":{},"version":""}]