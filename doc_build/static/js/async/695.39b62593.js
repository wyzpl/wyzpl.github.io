"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["695"],{2748:function(n,i,e){e.r(i),e.d(i,{default:()=>o});var t=e(5893),a=e(65);function s(n){let i=Object.assign({h1:"h1",a:"a",div:"div",p:"p",code:"code",h2:"h2",pre:"pre"},(0,a.ah)(),n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h1,{id:"app-如何打开应用通知权限",children:[(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#app-如何打开应用通知权限",children:"#"}),"APP 如何打开应用通知权限"]}),"\n",(0,t.jsxs)(i.div,{className:"rspress-directive warning",children:[(0,t.jsx)(i.div,{className:"rspress-directive-title",children:"注意"}),(0,t.jsx)(i.div,{className:"rspress-directive-content",children:(0,t.jsxs)(i.p,{children:["\n本文章使用 uniapp 开发，使用了",(0,t.jsx)(i.code,{children:"plus"}),"。如果涉及多端，需进行条件编译"]})})]}),"\n",(0,t.jsxs)(i.h2,{id:"获取通知权限状态",children:[(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#获取通知权限状态",children:"#"}),"获取通知权限状态"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:'function getNotificationStatus() {\n  console.log(platform);\n  if (platform == "ios") {\n    //这里是ios的方法\n    var UIApplication = plus.ios.import("UIApplication");\n    var app = UIApplication.sharedApplication();\n    if (app.currentUserNotificationSettings) {\n      var settings = app.currentUserNotificationSettings();\n      enabledTypes = settings.plusGetAttribute("types");\n      console.log("enabledTypes1:" + enabledTypes);\n      //如果enabledTypes = 0 就是通知权限没有开启\n      plus.ios.deleteObject(settings);\n      return enabledTypes;\n    }\n  } else if (platform == "android") {\n    //下面是安卓的方法\n    var main = plus.android.runtimeMainActivity();\n    var pkName = main.getPackageName();\n    var uid = main.getApplicationInfo().plusGetAttribute("uid");\n    var NotificationManagerCompat = plus.android.importClass("android.support.v4.app.NotificationManagerCompat");\n    //android.support.v4升级为androidx\n    if (NotificationManagerCompat == null) {\n      NotificationManagerCompat = plus.android.importClass("androidx.core.app.NotificationManagerCompat");\n    }\n    var areNotificationsEnabled = NotificationManagerCompat.from(main).areNotificationsEnabled();\n    console.log(areNotificationsEnabled);\n    return areNotificationsEnabled;\n    // 未开通‘允许通知’权限，则弹窗提醒开通，并点击确认后，跳转到系统设置页面进行设置\n  }\n}\n'})}),"\n",(0,t.jsxs)(i.h2,{id:"跳转通知权限设置",children:[(0,t.jsx)(i.a,{className:"header-anchor","aria-hidden":"true",href:"#跳转通知权限设置",children:"#"}),"跳转通知权限设置"]}),"\n",(0,t.jsx)(i.p,{children:"Android 可以直接跳转通知设置页面。ios 需要跳转设置页面后在手动进入通知设置"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-js",children:"function openNotificationSetting() {\n	//弹窗按钮绑定方法\n	if (platform == 'ios') {\n		//如果机型是ios，ios由于权限问题，可能需要手动开启\n		var UIApplication = plus.ios.import('UIApplication')\n		var app = UIApplication.sharedApplication()\n		var settings = app.currentUserNotificationSettings()\n		enabledTypes = settings.plusGetAttribute('types')\n		var NSURL2 = plus.ios.import('NSURL')\n		var setting2 = NSURL2.URLWithString('app-settings:')\n		var application2 = UIApplication.sharedApplication()\n		application2.openURL(setting2)\n		plus.ios.deleteObject(setting2)\n		plus.ios.deleteObject(NSURL2)\n		plus.ios.deleteObject(application2)\n		plus.ios.deleteObject(settings)\n	} else if (platform == 'android') {\n		//如果机型是安卓\n		var main = plus.android.runtimeMainActivity()\n		var pkName = main.getPackageName()\n		var uid = main.getApplicationInfo().plusGetAttribute('uid')\n		var Intent = plus.android.importClass('android.content.Intent')\n		var Build = plus.android.importClass('android.os.Build')\n		//android 8.0引导\n		if (Build.VERSION.SDK_INT >= 26) {\n			//判断安卓系统版本\n			var intent = new Intent('android.settings.APP_NOTIFICATION_SETTINGS')\n			intent.putExtra('android.provider.extra.APP_PACKAGE', pkName)\n		} else if (Build.VERSION.SDK_INT >= 21) {\n			//判断安卓系统版本\n			//android 5.0-7.0\n			var intent = new Intent('android.settings.APP_NOTIFICATION_SETTINGS')\n			intent.putExtra('app_package', pkName)\n			intent.putExtra('app_uid', uid)\n		} else {\n			//(<21)其他--跳转到该应用管理的详情页\n			intent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS)\n			var uri = Uri.fromParts('package', mainActivity.getPackageName(), null)\n			intent.setData(uri)\n		}\n		// 跳转到该应用的系统通知设置页\n		main.startActivity(intent)\n	}\n"})})]})}function r(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:i}=Object.assign({},(0,a.ah)(),n.components);return i?(0,t.jsx)(i,Object.assign({},n,{children:(0,t.jsx)(s,n)})):s(n)}let o=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["web%2Fdev%2F1.mdx"]={toc:[{id:"获取通知权限状态",text:"获取通知权限状态",depth:2},{id:"跳转通知权限设置",text:"跳转通知权限设置",depth:2}],title:"APP 如何打开应用通知权限",headingTitle:"APP 如何打开应用通知权限",frontmatter:{}}}}]);