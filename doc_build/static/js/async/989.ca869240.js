"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["989"],{1268:function(e,n,d){d.r(n),d.d(n,{default:()=>i});var r=d(5893),s=d(65);function c(e){let n=Object.assign({h1:"h1",a:"a",h3:"h3",strong:"strong",code:"code",h4:"h4",pre:"pre",p:"p"},(0,s.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"表达式和运算符",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#表达式和运算符",children:"#"}),"表达式和运算符"]}),"\n",(0,r.jsxs)(n.h3,{id:"空值合并运算符",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#空值合并运算符",children:"#"}),(0,r.jsx)(n.strong,{children:"空值合并运算符"}),"（",(0,r.jsx)(n.code,{children:"??"}),"）"]}),"\n",(0,r.jsxs)(n.h4,{id:"语法",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#语法",children:"#"}),"语法"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"leftExpr ?? rightExpr\n"})}),"\n",(0,r.jsxs)(n.p,{children:["用来判断左侧内容是否为",(0,r.jsx)(n.code,{children:"null"}),"或",(0,r.jsx)(n.code,{children:"undefined"}),"。如果为",(0,r.jsx)(n.code,{children:"null"}),"或",(0,r.jsx)(n.code,{children:"undefined"}),"则返回左侧内容，否者返回右侧内容。"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const foo = null ?? 'defatult string'\n// foo 默认值是default string\nconst foo = 0 ?? 'defatult string'\n// foo 默认值是0\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"与逻辑或运算符的区别",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#与逻辑或运算符的区别",children:"#"}),"与逻辑或运算符（",(0,r.jsx)(n.code,{children:"||"}),"）的区别"]}),"\n",(0,r.jsxs)(n.p,{children:["逻辑或运算符是一个布尔逻辑运算符，会把左侧容转换成布尔值，任何假值（",(0,r.jsx)(n.code,{children:"0"}),",",(0,r.jsx)(n.code,{children:"''"}),",",(0,r.jsx)(n.code,{children:"NaN"}),",",(0,r.jsx)(n.code,{children:"null"}),",",(0,r.jsx)(n.code,{children:"undefined"}),"）都不会被返回。"]}),"\n",(0,r.jsxs)(n.p,{children:["如果想定义这些假值为初始值的话，应该使用",(0,r.jsx)(n.strong,{children:"空值合并运算符"}),"（",(0,r.jsx)(n.code,{children:"??"}),"）"]}),"\n",(0,r.jsxs)(n.h3,{id:"可选链运算符",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#可选链运算符",children:"#"}),"可选链运算符（",(0,r.jsx)(n.code,{children:"?."}),"）"]}),"\n",(0,r.jsxs)(n.h4,{id:"语法-1",children:[(0,r.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#语法-1",children:"#"}),"语法"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"obj.val?.prop\nobj.val?.[expr]\nobj.func?.(args)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。在引用的值为空（",(0,r.jsx)(n.code,{children:"null"}),",",(0,r.jsx)(n.code,{children:"undefined"}),"不报错）或者引用函数不存在的时候返回",(0,r.jsx)(n.code,{children:"undefined"}),"。"]}),"\n",(0,r.jsx)(n.p,{children:"当尝试访问可能不存在的对象属性时，可选链运算符将会使表达式更短、更简明。"})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(c,e)})):c(e)}let i=h;h.__RSPRESS_PAGE_META={},h.__RSPRESS_PAGE_META["web%2Fbasic%2F1.mdx"]={toc:[{id:"空值合并运算符",text:"**空值合并运算符**（`??`）",depth:3},{id:"语法",text:"语法",depth:4},{id:"与逻辑或运算符的区别",text:"与逻辑或运算符（`||`）的区别",depth:4},{id:"可选链运算符",text:"可选链运算符（`?.`）",depth:3},{id:"语法-1",text:"语法",depth:4}],title:"表达式和运算符",headingTitle:"表达式和运算符",frontmatter:{}}}}]);