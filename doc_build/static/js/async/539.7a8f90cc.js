"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["539"],{9941:function(n,e,s){s.r(e),s.d(e,{default:()=>a});var i=s(5893),t=s(65);function r(n){let e=Object.assign({h1:"h1",a:"a",h3:"h3",p:"p",div:"div",code:"code",blockquote:"blockquote",pre:"pre"},(0,t.ah)(),n.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"app-增加权限获取说明",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#app-增加权限获取说明",children:"#"}),"APP 增加权限获取说明"]}),"\n",(0,i.jsxs)(e.h3,{id:"背景",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#背景",children:"#"}),"背景"]}),"\n",(0,i.jsx)(e.p,{children:"APP 上架华为应用商店需要说明获取权限的说明，否则上架失败。"}),"\n",(0,i.jsx)(e.p,{children:"技术栈：UniApp Vue3 Vite"}),"\n",(0,i.jsxs)(e.h3,{id:"资料",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#资料",children:"#"}),"资料"]}),"\n",(0,i.jsxs)(e.p,{children:["安卓权限标识：",(0,i.jsx)(e.a,{href:"https://developer.android.com/reference/android/Manifest.permission",rel:"noopener noreferrer",target:"_blank",children:"https://developer.android.com/reference/android/Manifest.permission"})," (需要翻墙)"]}),"\n",(0,i.jsxs)(e.h3,{id:"踩坑",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#踩坑",children:"#"}),"踩坑"]}),"\n",(0,i.jsxs)(e.div,{className:"rspress-directive tip",children:[(0,i.jsx)(e.div,{className:"rspress-directive-title",children:"权限标识"}),(0,i.jsxs)(e.div,{className:"rspress-directive-content",children:[(0,i.jsxs)(e.p,{children:["\n调用摄像头的权限：",(0,i.jsx)(e.code,{children:"android.permission.CAMERA"})]}),(0,i.jsxs)(e.p,{children:["调用相册的权限：",(0,i.jsx)(e.code,{children:"android.permission.READ_MEDIA_IMAGES"})]})]})]}),"\n",(0,i.jsxs)(e.p,{children:["在项目中使用",(0,i.jsx)(e.code,{children:"uni.chooseImage()"}),"去获取相机、相册权限。获取相机权限正常，获取相册权限一直显示权限是永久关闭状态，手动去启用也无法正常使用。"]}),"\n",(0,i.jsxs)(e.p,{children:["在网上查找到的资料使用的权限都是",(0,i.jsx)(e.code,{children:"android.permission.READ_EXTERNAL_STORAGE"})]}),"\n",(0,i.jsxs)(e.div,{className:"rspress-directive danger",children:[(0,i.jsx)(e.div,{className:"rspress-directive-title",children:"DANGER"}),(0,i.jsx)(e.div,{className:"rspress-directive-content",children:(0,i.jsxs)(e.p,{children:["\n但是",(0,i.jsx)(e.code,{children:"READ_EXTERNAL_STORAGE"}),"在安卓 11(从 API 33 开始，此权限无效) 中已经失效了，需要使用",(0,i.jsx)(e.code,{children:"READ_MEDIA_IMAGES"}),"、 ",(0,i.jsx)(e.code,{children:"READ_MEDIA_VIDEO"}),"、 ",(0,i.jsx)(e.code,{children:"READ_MEDIA_AUDIO"})]})})]}),"\n",(0,i.jsxs)(e.p,{children:["最后，改成",(0,i.jsx)(e.code,{children:"android.permission.READ_MEDIA_IMAGES"}),"可以正常获取权限，获取相册的内容。"]}),"\n",(0,i.jsxs)(e.h3,{id:"解决方案",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#解决方案",children:"#"}),"解决方案"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["插件中使用了",(0,i.jsx)(e.code,{children:"plus"}),"，如果是多端项目需要进行条件判断"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["使用插件：",(0,i.jsx)(e.a,{href:"https://ext.dcloud.net.cn/plugin?id=594",rel:"noopener noreferrer",target:"_blank",children:"App 权限判断和提示"})]}),"\n",(0,i.jsxs)(e.p,{children:["在调用插件获取权限时，通过",(0,i.jsx)(e.code,{children:"plus.nativeObj.View"}),"画出权限获取说明，在获取权限成功后，移除权限获取说明。"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-js",meta:'title="js_sdk\\wa-permission\\permission.js"',children:'\nlet locale = uni.getStorageSync("lang");\n\nvar isIos;\n// #ifdef APP-PLUS\nisIos = plus.os.name == "iOS";\n// #endif\n\n// 判断推送权限是否开启\nfunction judgeIosPermissionPush() {\nvar result = false;\nvar UIApplication = plus.ios.import("UIApplication");\nvar app = UIApplication.sharedApplication();\nvar enabledTypes = 0;\nif (app.currentUserNotificationSettings) {\nvar settings = app.currentUserNotificationSettings();\nenabledTypes = settings.plusGetAttribute("types");\nconsole.log("enabledTypes1:" + enabledTypes);\nif (enabledTypes == 0) {\nconsole.log("推送权限没有开启");\n} else {\nresult = true;\nconsole.log("已经开启推送功能!");\n}\nplus.ios.deleteObject(settings);\n} else {\nenabledTypes = app.enabledRemoteNotificationTypes();\nif (enabledTypes == 0) {\nconsole.log("推送权限没有开启!");\n} else {\nresult = true;\nconsole.log("已经开启推送功能!");\n}\nconsole.log("enabledTypes2:" + enabledTypes);\n}\nplus.ios.deleteObject(app);\nplus.ios.deleteObject(UIApplication);\nreturn result;\n}\n\n// 判断定位权限是否开启\nfunction judgeIosPermissionLocation() {\nvar result = false;\nvar cllocationManger = plus.ios.import("CLLocationManager");\nvar status = cllocationManger.authorizationStatus();\nresult = status != 2;\nconsole.log("定位权限开启：" + result);\n// 以下代码判断了手机设备的定位是否关闭，推荐另行使用方法 checkSystemEnableLocation\n/_ var enable = cllocationManger.locationServicesEnabled();\nvar status = cllocationManger.authorizationStatus();\nconsole.log("enable:" + enable);\nconsole.log("status:" + status);\nif (enable && status != 2) {\nresult = true;\nconsole.log("手机定位服务已开启且已授予定位权限");\n} else {\nconsole.log("手机系统的定位没有打开或未给予定位权限");\n} _/\nplus.ios.deleteObject(cllocationManger);\nreturn result;\n}\n\n// 判断麦克风权限是否开启\nfunction judgeIosPermissionRecord() {\nvar result = false;\nvar avaudiosession = plus.ios.import("AVAudioSession");\nvar avaudio = avaudiosession.sharedInstance();\nvar permissionStatus = avaudio.recordPermission();\nconsole.log("permissionStatus:" + permissionStatus);\nif (permissionStatus == 1684369017 || permissionStatus == 1970168948) {\nconsole.log("麦克风权限没有开启");\n} else {\nresult = true;\nconsole.log("麦克风权限已经开启");\n}\nplus.ios.deleteObject(avaudiosession);\nreturn result;\n}\n\n// 判断相机权限是否开启\nfunction judgeIosPermissionCamera() {\nvar result = false;\nvar AVCaptureDevice = plus.ios.import("AVCaptureDevice");\nvar authStatus = AVCaptureDevice.authorizationStatusForMediaType("vide");\nconsole.log("authStatus:" + authStatus);\nif (authStatus == 3) {\nresult = true;\nconsole.log("相机权限已经开启");\n} else {\nconsole.log("相机权限没有开启");\n}\nplus.ios.deleteObject(AVCaptureDevice);\nreturn result;\n}\n\n// 判断相册权限是否开启\nfunction judgeIosPermissionPhotoLibrary() {\nvar result = false;\nvar PHPhotoLibrary = plus.ios.import("PHPhotoLibrary");\nvar authStatus = PHPhotoLibrary.authorizationStatus();\nconsole.log("authStatus:" + authStatus);\nif (authStatus == 3) {\nresult = true;\nconsole.log("相册权限已经开启");\n} else {\nconsole.log("相册权限没有开启");\n}\nplus.ios.deleteObject(PHPhotoLibrary);\nreturn result;\n}\n\n// 判断通讯录权限是否开启\nfunction judgeIosPermissionContact() {\nvar result = false;\nvar CNContactStore = plus.ios.import("CNContactStore");\nvar cnAuthStatus = CNContactStore.authorizationStatusForEntityType(0);\nif (cnAuthStatus == 3) {\nresult = true;\nconsole.log("通讯录权限已经开启");\n} else {\nconsole.log("通讯录权限没有开启");\n}\nplus.ios.deleteObject(CNContactStore);\nreturn result;\n}\n\n// 判断日历权限是否开启\nfunction judgeIosPermissionCalendar() {\nvar result = false;\nvar EKEventStore = plus.ios.import("EKEventStore");\nvar ekAuthStatus = EKEventStore.authorizationStatusForEntityType(0);\nif (ekAuthStatus == 3) {\nresult = true;\nconsole.log("日历权限已经开启");\n} else {\nconsole.log("日历权限没有开启");\n}\nplus.ios.deleteObject(EKEventStore);\nreturn result;\n}\n\n// 判断备忘录权限是否开启\nfunction judgeIosPermissionMemo() {\nvar result = false;\nvar EKEventStore = plus.ios.import("EKEventStore");\nvar ekAuthStatus = EKEventStore.authorizationStatusForEntityType(1);\nif (ekAuthStatus == 3) {\nresult = true;\nconsole.log("备忘录权限已经开启");\n} else {\nconsole.log("备忘录权限没有开启");\n}\nplus.ios.deleteObject(EKEventStore);\nreturn result;\n}\n\n// Android 权限查询\nfunction requestAndroidPermission(permissionID) {\nreturn new Promise((resolve, reject) => {\nplus.android.requestPermissions(\npermissionID.split(","),\n// [permissionID], // 理论上支持多个权限同时查询，但实际上本函数封装只处理了一个权限的情况。有需要的可自行扩展封装\nfunction (resultObj) {\nvar result = 0;\nfor (var i = 0; i < resultObj.granted.length; i++) {\nvar grantedPermission = resultObj.granted[i];\nconsole.log("已获取的权限：" + grantedPermission);\nresult = 1;\n}\nfor (var i = 0; i < resultObj.deniedPresent.length; i++) {\nvar deniedPresentPermission = resultObj.deniedPresent[i];\nconsole.log("拒绝本次申请的权限：" + deniedPresentPermission);\nresult = 0;\n}\nfor (var i = 0; i < resultObj.deniedAlways.length; i++) {\nvar deniedAlwaysPermission = resultObj.deniedAlways[i];\nconsole.log("永久拒绝申请的权限：" + deniedAlwaysPermission);\nresult = -1;\n}\nresolve(result);\n// 若所需权限被拒绝,则打开 APP 设置界面,可以在 APP 设置界面打开相应权限\n// if (result != 1) {\n// gotoAppPermissionSetting()\n// }\n},\nfunction (error) {\nconsole.log("申请权限错误：" + error.code + " = " + error.message);\nresolve({\ncode: error.code,\nmessage: error.message,\n});\n}\n);\n});\n}\n\n// 使用一个方法，根据参数判断权限\nfunction judgeIosPermission(permissionID) {\nif (permissionID == "location") {\nreturn judgeIosPermissionLocation();\n} else if (permissionID == "camera") {\nreturn judgeIosPermissionCamera();\n} else if (permissionID == "photoLibrary") {\nreturn judgeIosPermissionPhotoLibrary();\n} else if (permissionID == "record") {\nreturn judgeIosPermissionRecord();\n} else if (permissionID == "push") {\nreturn judgeIosPermissionPush();\n} else if (permissionID == "contact") {\nreturn judgeIosPermissionContact();\n} else if (permissionID == "calendar") {\nreturn judgeIosPermissionCalendar();\n} else if (permissionID == "memo") {\nreturn judgeIosPermissionMemo();\n}\nreturn false;\n}\n\n// 跳转到**应用**的权限页面\nfunction gotoAppPermissionSetting() {\nif (isIos) {\nvar UIApplication = plus.ios.import("UIApplication");\nvar application2 = UIApplication.sharedApplication();\nvar NSURL2 = plus.ios.import("NSURL");\n// var setting2 = NSURL2.URLWithString("prefs:root=LOCATION_SERVICES");\nvar setting2 = NSURL2.URLWithString("app-settings:");\napplication2.openURL(setting2);\n\n    plus.ios.deleteObject(setting2);\n    plus.ios.deleteObject(NSURL2);\n    plus.ios.deleteObject(application2);\n\n} else {\n// console.log(plus.device.vendor);\nvar Intent = plus.android.importClass("android.content.Intent");\nvar Settings = plus.android.importClass("android.provider.Settings");\nvar Uri = plus.android.importClass("android.net.Uri");\nvar mainActivity = plus.android.runtimeMainActivity();\nvar intent = new Intent();\nintent.setAction(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);\nvar uri = Uri.fromParts("package", mainActivity.getPackageName(), null);\nintent.setData(uri);\nmainActivity.startActivity(intent);\n}\n}\n\n// 检查系统的设备服务是否开启\n// var checkSystemEnableLocation = async function () {\nfunction checkSystemEnableLocation() {\nif (isIos) {\nvar result = false;\nvar cllocationManger = plus.ios.import("CLLocationManager");\nvar result = cllocationManger.locationServicesEnabled();\nconsole.log("系统定位开启:" + result);\nplus.ios.deleteObject(cllocationManger);\nreturn result;\n} else {\nvar context = plus.android.importClass("android.content.Context");\nvar locationManager = plus.android.importClass("android.location.LocationManager");\nvar main = plus.android.runtimeMainActivity();\nvar mainSvr = main.getSystemService(context.LOCATION_SERVICE);\nvar result = mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER);\nconsole.log("系统定位开启:" + result);\nreturn result;\n}\n}\n\nlet permissionMap = {\nandroid: {\nCAMERA_EXTERNAL_STORAGE: {\nname: "android.permission.READ_MEDIA_IMAGES,android.permission.CAMERA",\n"zh-cn": {\ntitle: "相机/相册权限说明",\ncontent: "需要访问您的相机/相册，扫码、拍摄或上传图片到云平台。",\n},\nen: {\ntitle: "Camera/Album Permission Application",\ncontent: " needs to access your camera/album, scan codes, take or upload pictures to the cloud platform.",\n},\n},\nCAMERA: {\nname: "android.permission.CAMERA",\n"zh-cn": {\ntitle: "相机权限说明",\ncontent: "需要访问您的相机，扫码或拍摄图片上传到云平台。",\n},\nen: {\ntitle: "Camera permission application",\ncontent: " needs to access your camera, scan codes or take pictures to upload to the cloud platform.",\n},\n},\nEXTERNAL_STORAGE: {\nname: "android.permission.READ_EXTERNAL_STORAGE,android.permission.WRITE_EXTERNAL_STORAGE",\n"zh-cn": {\ntitle: "相册权限说明",\ncontent: "需要访问您的相册，上传图片到云平台。",\n},\nen: {\ntitle: "Album permission application",\ncontent: " needs to access your photo album and upload pictures to the cloud platform.",\n},\n},\n},\nios: {},\n};\n\nlet view = null;\n\nfunction showViewDesc(permission) {\nlet plat = isIos ? "ios" : "android";\nlocale = uni.getStorageSync("lang");\nview = new plus.nativeObj.View("per-modal", {\ntop: "0px",\nleft: "0px",\nwidth: "100%",\nbackgroundColor: "rgba(0,0,0,0.2)",\n//opacity: \'.9\'\n});\nview.drawRect(\n{\ncolor: "#fff",\nradius: "5px",\n},\n{\ntop: "30px",\nleft: "5%",\nwidth: "90%",\nheight: "100px",\n}\n);\nview.drawText(\npermissionMap[plat][permission][locale]["title"],\n{\ntop: "40px",\nleft: "8%",\nheight: "30px",\n},\n{\nalign: "left",\ncolor: "#000",\n},\n{\nonClick: function (e) {\nconsole.log(e);\n},\n}\n);\nview.drawText(\npermissionMap[plat][permission][locale]["content"],\n{\ntop: "65px",\nheight: "60px",\nleft: "8%",\nwidth: "84%",\n},\n{\nwhiteSpace: "normal",\nsize: "14px",\nalign: "left",\ncolor: "#656563",\n}\n);\nview.show();\n}\n\nfunction closeViewDesc() {\nview && view.close();\n}\nfunction permissionCheck(permission) {\nreturn new Promise(async (resolve, reject) => {\nlet plat = isIos ? "ios" : "android";\nif (isIos) {\n// ios\n// const camera = permission.judgeIosPermission("camera");//判断 ios 是否给予摄像头权限\n// //ios 相册没权限，系统会自动弹出授权框\n// //let photoLibrary = permission.judgeIosPermission("photoLibrary");//判断 ios 是否给予相册权限\n// if(camera){\n// resolve();\n// }else{\n// reject(\'需要开启相机使用权限\');\n// }\nresolve(1);\n} else {\n// android\nlet permission_arr = permissionMap[plat][permission]["name"].split(",");\nlet flag = true;\nfor (let i = 0; i < permission_arr.length; i++) {\nlet status = plus.navigator.checkPermission(permission_arr[i]);\nif (status == "undetermined") {\nflag = false;\n}\n}\nconsole.log("flag", flag);\nif (flag == false) {\n// 未完全授权\n\n        if (uni.getStorageSync("cameraPermission") !== -1) {\n          showViewDesc(permission);\n        }\n        requestAndroidPermission(permissionMap[plat][permission]["name"]).then((res) => {\n          if (uni.getStorageSync("cameraPermission") !== -1) {\n            view.close();\n          }\n          uni.setStorageSync("cameraPermission", res);\n          resolve(res);\n        });\n      } else {\n        resolve(1);\n      }\n    }\n\n});\n}\n\nexport {\n  showViewDesc,\n  closeViewDesc,\n  judgeIosPermission,\n  requestAndroidPermission,\n  checkSystemEnableLocation,\n  gotoAppPermissionSetting,\n  permissionCheck,\n};\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"其他方案",children:[(0,i.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#其他方案",children:"#"}),"其他方案"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://ext.dcloud.net.cn/plugin?id=16960",rel:"noopener noreferrer",target:"_blank",children:"uni-registerRequestPermissionTips"}),"：以上面方案为基础进行的二开插件，与获取权限操作同步展示，但是获取摄像头权限不能正常使用，看后续会不会修复"]}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.a,{href:"https://ext.dcloud.net.cn/plugin?id=15897",rel:"noopener noreferrer",target:"_blank",children:"权限申请说明"}),"：通过对 UniApp API 的拦截,提前展示要获取的权限说明。 不用改动代码"]})]})}function o(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?(0,i.jsx)(e,Object.assign({},n,{children:(0,i.jsx)(r,n)})):r(n)}let a=o;o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["web%2Fdev%2F2.mdx"]={toc:[{id:"背景",text:"背景",depth:3},{id:"资料",text:"资料",depth:3},{id:"踩坑",text:"踩坑",depth:3},{id:"解决方案",text:"解决方案",depth:3},{id:"其他方案",text:"其他方案",depth:3}],title:"APP 增加权限获取说明",headingTitle:"APP 增加权限获取说明",frontmatter:{}}}}]);